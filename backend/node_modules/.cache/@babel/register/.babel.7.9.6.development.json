{
  "{\"sourceRoot\":\"/Users/natnaelmekonnen/Documents/react-practice/Whack-A-Mole/backend/src/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/natnaelmekonnen/Documents/react-practice/Whack-A-Mole/backend\",\"filename\":\"/Users/natnaelmekonnen/Documents/react-practice/Whack-A-Mole/backend/src/server.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/natnaelmekonnen/Documents/react-practice/Whack-A-Mole/backend\",\"plugins\":[{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"runtime\":\"classic\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"corejs3-usage\",\"visitor\":{\"ImportDeclaration\":{\"enter\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"Import\":{\"enter\":[null]},\"SpreadElement\":{\"enter\":[null]},\"YieldExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"ForOfStatement\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"corejs\":{\"options\":{\"loose\":false,\"includePrerelease\":false},\"loose\":false,\"raw\":\"3.0.0\",\"major\":3,\"minor\":0,\"patch\":0,\"prerelease\":[],\"build\":[],\"version\":\"3.0.0\"},\"polyfillTargets\":{\"chrome\":\"49.0.0\",\"edge\":\"18.0.0\",\"firefox\":\"68.0.0\",\"ie\":\"11.0.0\",\"ios\":\"9.3.0\",\"opera\":\"67.0.0\",\"safari\":\"12.1.0\",\"samsung\":\"10.1.0\"},\"include\":{},\"exclude\":{},\"proposals\":false,\"shippedProposals\":false,\"regenerator\":true,\"debug\":true}},{\"key\":\"regenerator-usage\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"corejs\":{\"options\":{\"loose\":false,\"includePrerelease\":false},\"loose\":false,\"raw\":\"3.0.0\",\"major\":3,\"minor\":0,\"patch\":0,\"prerelease\":[],\"build\":[],\"version\":\"3.0.0\"},\"polyfillTargets\":{\"chrome\":\"49.0.0\",\"edge\":\"18.0.0\",\"firefox\":\"68.0.0\",\"ie\":\"11.0.0\",\"ios\":\"9.3.0\",\"opera\":\"67.0.0\",\"safari\":\"12.1.0\",\"samsung\":\"10.1.0\"},\"include\":{},\"exclude\":{},\"proposals\":false,\"shippedProposals\":false,\"regenerator\":true,\"debug\":true}}],\"presets\":[]}:7.9.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/natnaelmekonnen/Documents/react-practice/Whack-A-Mole/backend/src/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/natnaelmekonnen/Documents/react-practice/Whack-A-Mole/backend",
      "filename": "/Users/natnaelmekonnen/Documents/react-practice/Whack-A-Mole/backend/src/server.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/natnaelmekonnen/Documents/react-practice/Whack-A-Mole/backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "runtime": "classic",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "corejs3-usage",
          "visitor": {
            "ImportDeclaration": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "Import": {
              "enter": [
                null
              ]
            },
            "SpreadElement": {
              "enter": [
                null
              ]
            },
            "YieldExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "corejs": {
              "options": {
                "loose": false,
                "includePrerelease": false
              },
              "loose": false,
              "raw": "3.0.0",
              "major": 3,
              "minor": 0,
              "patch": 0,
              "prerelease": [],
              "build": [],
              "version": "3.0.0"
            },
            "polyfillTargets": {
              "chrome": "49.0.0",
              "edge": "18.0.0",
              "firefox": "68.0.0",
              "ie": "11.0.0",
              "ios": "9.3.0",
              "opera": "67.0.0",
              "safari": "12.1.0",
              "samsung": "10.1.0"
            },
            "include": {},
            "exclude": {},
            "proposals": false,
            "shippedProposals": false,
            "regenerator": true,
            "debug": true
          }
        },
        {
          "key": "regenerator-usage",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "corejs": {
              "options": {
                "loose": false,
                "includePrerelease": false
              },
              "loose": false,
              "raw": "3.0.0",
              "major": 3,
              "minor": 0,
              "patch": 0,
              "prerelease": [],
              "build": [],
              "version": "3.0.0"
            },
            "polyfillTargets": {
              "chrome": "49.0.0",
              "edge": "18.0.0",
              "firefox": "68.0.0",
              "ie": "11.0.0",
              "ios": "9.3.0",
              "opera": "67.0.0",
              "safari": "12.1.0",
              "samsung": "10.1.0"
            },
            "include": {},
            "exclude": {},
            "proposals": false,
            "shippedProposals": false,
            "regenerator": true,
            "debug": true
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/natnaelmekonnen/Documents/react-practice/Whack-A-Mole/backend/src/server.js",
        "plugins": [
          "jsx",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/natnaelmekonnen/Documents/react-practice/Whack-A-Mole/backend/src/server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/natnaelmekonnen/Documents/react-practice/Whack-A-Mole/backend/src/",
        "sourceFileName": "server.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nrequire(\"core-js/modules/es.array.concat\");\n\nrequire(\"core-js/modules/es.array.find\");\n\nrequire(\"core-js/modules/es.array.sort\");\n\nrequire(\"core-js/modules/es.object.to-string\");\n\nrequire(\"core-js/modules/es.promise\");\n\nrequire(\"regenerator-runtime/runtime\");\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _bodyParser = _interopRequireDefault(require(\"body-parser\"));\n\nvar _mongodb = require(\"mongodb\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar app = (0, _express.default)();\nvar PORT = 8000;\napp.use(_bodyParser.default.json());\napp.get('/api/leaders/', /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(req, res) {\n    var client, db, sort, leadersList;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _mongodb.MongoClient.connect('mongodb://localhost:27017', {\n              useNewUrlParser: true,\n              useUnifiedTopology: true\n            });\n\n          case 3:\n            client = _context.sent;\n            db = client.db('leaders');\n            sort = {\n              score: -1\n            };\n            _context.next = 8;\n            return db.collection('leaders').find({}).sort(sort).toArray();\n\n          case 8:\n            leadersList = _context.sent;\n            res.status(200).json(leadersList);\n            client.close();\n            _context.next = 16;\n            break;\n\n          case 13:\n            _context.prev = 13;\n            _context.t0 = _context[\"catch\"](0);\n            res.status(500).json({\n              message: 'Error connecting to db',\n              error: _context.t0\n            });\n\n          case 16:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 13]]);\n  }));\n\n  return function (_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}());\napp.get('/api/leaders/:username', /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(req, res) {\n    var userName, client, db, leaderInfo;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            userName = req.params.username;\n            _context2.next = 4;\n            return _mongodb.MongoClient.connect('mongodb://localhost:27017', {\n              useNewUrlParser: true,\n              useUnifiedTopology: true\n            });\n\n          case 4:\n            client = _context2.sent;\n            db = client.db('leaders');\n            _context2.next = 8;\n            return db.collection('leaders').findOne({\n              username: userName\n            });\n\n          case 8:\n            leaderInfo = _context2.sent;\n            res.status(200).json(leaderInfo);\n            client.close();\n            _context2.next = 16;\n            break;\n\n          case 13:\n            _context2.prev = 13;\n            _context2.t0 = _context2[\"catch\"](0);\n            res.status(500).json({\n              message: 'Error connecting to db',\n              error: _context2.t0\n            });\n\n          case 16:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[0, 13]]);\n  }));\n\n  return function (_x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}());\napp.post('/api/leaders/:username/:newscore', /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(req, res) {\n    var userName, newScore, client, db, leaderInfo, updatedLeaderInfo;\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            userName = req.params.username;\n            newScore = req.params.newscore;\n            _context3.next = 5;\n            return _mongodb.MongoClient.connect('mongodb://localhost:27017', {\n              useNewUrlParser: true,\n              useUnifiedTopology: true\n            });\n\n          case 5:\n            client = _context3.sent;\n            db = client.db('leaders');\n            _context3.next = 9;\n            return db.collection('leaders').findOne({\n              username: userName\n            });\n\n          case 9:\n            leaderInfo = _context3.sent;\n            _context3.next = 12;\n            return db.collection('leaders').updateOne({\n              username: userName\n            }, {\n              '$set': {\n                score: newScore\n              }\n            });\n\n          case 12:\n            _context3.next = 14;\n            return db.collection('leaders').findOne({\n              username: userName\n            });\n\n          case 14:\n            updatedLeaderInfo = _context3.sent;\n            //res.status(200).json(updatedLeaderInfo);\n            res.status(200).send(\"Score for \".concat(userName, \" has been updated to \").concat(updatedLeaderInfo.score));\n            client.close();\n            _context3.next = 22;\n            break;\n\n          case 19:\n            _context3.prev = 19;\n            _context3.t0 = _context3[\"catch\"](0);\n            res.status(500).json({\n              message: 'Error connecting to db',\n              error: _context3.t0\n            });\n\n          case 22:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, null, [[0, 19]]);\n  }));\n\n  return function (_x5, _x6) {\n    return _ref3.apply(this, arguments);\n  };\n}());\napp.listen(PORT, function () {\n  return console.log(\"Listening on port \", PORT);\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZlci5qcyJdLCJuYW1lcyI6WyJhcHAiLCJQT1JUIiwidXNlIiwiYm9keVBhcnNlciIsImpzb24iLCJnZXQiLCJyZXEiLCJyZXMiLCJNb25nb0NsaWVudCIsImNvbm5lY3QiLCJ1c2VOZXdVcmxQYXJzZXIiLCJ1c2VVbmlmaWVkVG9wb2xvZ3kiLCJjbGllbnQiLCJkYiIsInNvcnQiLCJzY29yZSIsImNvbGxlY3Rpb24iLCJmaW5kIiwidG9BcnJheSIsImxlYWRlcnNMaXN0Iiwic3RhdHVzIiwiY2xvc2UiLCJtZXNzYWdlIiwiZXJyb3IiLCJ1c2VyTmFtZSIsInBhcmFtcyIsInVzZXJuYW1lIiwiZmluZE9uZSIsImxlYWRlckluZm8iLCJwb3N0IiwibmV3U2NvcmUiLCJuZXdzY29yZSIsInVwZGF0ZU9uZSIsInVwZGF0ZWRMZWFkZXJJbmZvIiwic2VuZCIsImxpc3RlbiIsImNvbnNvbGUiLCJsb2ciXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0FBQUE7O0FBQ0E7O0FBQ0E7Ozs7Ozs7O0FBRUEsSUFBTUEsR0FBRyxHQUFHLHVCQUFaO0FBQ0EsSUFBTUMsSUFBSSxHQUFHLElBQWI7QUFFQUQsR0FBRyxDQUFDRSxHQUFKLENBQVFDLG9CQUFXQyxJQUFYLEVBQVI7QUFFQUosR0FBRyxDQUFDSyxHQUFKLENBQVEsZUFBUjtBQUFBLHFFQUF5QixpQkFBT0MsR0FBUCxFQUFZQyxHQUFaO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxtQkFFSUMscUJBQVlDLE9BQVosQ0FBb0IsMkJBQXBCLEVBQWlEO0FBQUNDLGNBQUFBLGVBQWUsRUFBRSxJQUFsQjtBQUF3QkMsY0FBQUEsa0JBQWtCLEVBQUU7QUFBNUMsYUFBakQsQ0FGSjs7QUFBQTtBQUVYQyxZQUFBQSxNQUZXO0FBR1hDLFlBQUFBLEVBSFcsR0FHTkQsTUFBTSxDQUFDQyxFQUFQLENBQVUsU0FBVixDQUhNO0FBS2JDLFlBQUFBLElBTGEsR0FLTjtBQUFDQyxjQUFBQSxLQUFL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QkFTL0JmLEVBQUUsQ0FBQ0csVUFBSCxDQUFjLFNBQWQsRUFBeUJnQixTQUF6QixDQUFtQztBQUFDTixjQUFBQSxRQUFRLEVBQUVGO0FBQVgsYUFBbkMsRUFBd0Q7QUFDMUQsc0JBQVE7QUFDSlQsZ0JBQUFBLEtBQUssRUFBRWU7QUFESDtBQURrRCxhQUF4RCxDQVQrQjs7QUFBQTtBQUFBO0FBQUEsbUJBY0xqQixFQUFFLENBQUNHLFVBQUgsQ0FBYyxTQUFkLEVBQXlCVyxPQUF6QixDQUFpQztBQUFDRCxjQUFBQSxRQUFRLEVBQUVGO0FBQVgsYUFBakMsQ0FkSzs7QUFBQTtBQWMvQlMsWUFBQUEsaUJBZCtCO0FBZ0JyQztBQUNBMUIsWUFBQUEsR0FBRyxDQUFDYSxNQUFKLENBQVcsR0FBWCxFQUFnQmMsSUFBaEIscUJBQWtDVixRQUFsQyxrQ0FBa0VTLGlCQUFpQixDQUFDbEIsS0FBcEY7QUFFQUgsWUFBQUEsTUFBTSxDQUFDUyxLQUFQO0FBbkJxQztBQUFBOztBQUFBO0FBQUE7QUFBQTtBQXNCckNkLFlBQUFBLEdBQUcsQ0FBQ2EsTUFBSixDQUFXLEdBQVgsRUFBZ0JoQixJQUFoQixDQUFxQjtBQUFDa0IsY0FBQUEsT0FBTyxFQUFFLHdCQUFWO0FBQW9DQyxjQUFBQSxLQUFLO0FBQXpDLGFBQXJCOztBQXRCcUM7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsR0FBN0M7O0FBQUE7QUFBQTtBQUFBO0FBQUE7QUEwQkF2QixHQUFHLENBQUNtQyxNQUFKLENBQVdsQyxJQUFYLEVBQWlCO0FBQUEsU0FBTW1DLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLG9CQUFaLEVBQWtDcEMsSUFBbEMsQ0FBTjtBQUFBLENBQWpCIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9uYXRuYWVsbWVrb25uZW4vRG9jdW1lbnRzL3JlYWN0LXByYWN0aWNlL1doYWNrLUEtTW9sZS9iYWNrZW5kL3NyYy8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZXhwcmVzcyBmcm9tICdleHByZXNzJztcbmltcG9ydCBib2R5UGFyc2VyIGZyb20gJ2JvZHktcGFyc2VyJztcbmltcG9ydCB7TW9uZ29DbGllbnR9IGZyb20gJ21vbmdvZGInO1xuXG5jb25zdCBhcHAgPSBleHByZXNzKCk7XG5jb25zdCBQT1JUID0gODAwMDtcblxuYXBwLnVzZShib2R5UGFyc2VyLmpzb24oKSk7XG5cbmFwcC5nZXQoJy9hcGkvbGVhZGVycy8nLCBhc3luYyAocmVxLCByZXMpID0+IHtcbiAgICB0cnkge1xuICAgICAgICBjb25zdCBjbGllbnQgPSBhd2FpdCBNb25nb0NsaWVudC5jb25uZWN0KCdtb25nb2RiOi8vbG9jYWxob3N0OjI3MDE3Jywge3VzZU5ld1VybFBhcnNlcjogdHJ1ZSwgdXNlVW5pZmllZFRvcG9sb2d5OiB0cnVlfSk7XG4gICAgICAgIGNvbnN0IGRiID0gY2xpZW50LmRiKCdsZWFkZXJzJyk7XG5cbiAgICAgICAgdmFyIHNvcnQgPSB7c2NvcmU6IC0xfTtcbiAgICAgICAgY29uc3QgbGVhZGVyc0xpc3QgPSBhd2FpdCBkYi5jb2xsZWN0aW9uKCdsZWFkZXJzJykuZmluZCh7fSkuc29ydChzb3J0KS50b0FycmF5KCk7XG5cbiAgICAgICAgcmVzLnN0YXR1cygyMDApLmpzb24obGVhZGVyc0xpc3QpO1xuXG4gICAgICAgIGNsaWVudC5jbG9zZSgpO1xuXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgcmVzLnN0YXR1cyg1MDApLmpzb24oe21lc3NhZ2U6ICdFcnJvciBjb25uZWN0aW5nIHRvIGRiJywgZXJyb3J9KTtcbiAgICB9XG59KVxuXG5hcHAuZ2V0KCcvYXBpL2xlYWRlcnMvOnVzZXJuYW1lJywgYXN5bmMgKHJlcSwgcmVzKSA9PiB7XG4gICAgdHJ5IHtcbiAgICAgICAgY29uc3QgdXNlck5hbWUgPSByZXEucGFyYW1zLnVzZXJuYW1lO1xuXG4gICAgICAgIGNvbnN0IGNsaWVudCA9IGF3YWl0IE1vbmdvQ2xpZW50LmNvbm5lY3QoJ21vbmdvZGI6Ly9sb2NhbGhvc3Q6MjcwMTcnLCB7dXNlTmV3VXJsUGFyc2VyOiB0cnVlLCB1c2VVbmlmaWVkVG9wb2xvZ3k6IHRydWV9KTtcbiAgICAgICAgY29uc3QgZGIgPSBjbGllbnQuZGIoJ2xlYWRlcnMnKTtcblxuICAgICAgICBjb25zdCBsZWFkZXJJbmZvID0gYXdhaXQgZGIuY29sbGVjdGlvbignbGVhZGVycycpLmZpbmRPbmUoe3VzZXJuYW1lOiB1c2VyTmFtZX0pO1xuXG4gICAgICAgIHJlcy5zdGF0dXMoMjAwKS5qc29uKGxlYWRlckluZm8pO1xuXG4gICAgICAgIGNsaWVudC5jbG9zZSgpO1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgIHJlcy5zdGF0dXMoNTAwKS5qc29uKHttZXNzYWdlOiAnRXJyb3IgY29ubmVjdGluZyB0byBkYicsIGVycm9yfSk7XG4gICAgfVxufSk7XG5cbmFwcC5wb3N0KCcvYXBpL2xlYWRlcnMvOnVzZXJuYW1lLzpuZXdzY29yZScsIGFzeW5jIChyZXEsIHJlcykgPT4ge1xuICAgIHRyeSB7XG4gICAgICAgIGNvbnN0IHVzZXJOYW1lID0gcmVxLnBhcmFtcy51c2VybmFtZTtcbiAgICAgICAgY29uc3QgbmV3U2NvcmUgPSByZXEucGFyYW1zLm5ld3Njb3JlO1xuXG4gICAgICAgIGNvbnN0IGNsaWVudCA9IGF3YWl0IE1vbmdvQ2xpZW50LmNvbm5lY3QoJ21vbmdvZGI6Ly9sb2NhbGhvc3Q6MjcwMTcnLCB7dXNlTmV3VXJsUGFyc2VyOiB0cnVlLCB1c2VVbmlmaWVkVG9wb2xvZ3k6IHRydWV9KTtcbiAgICAgICAgY29uc3QgZGIgPSBjbGllbnQuZGIoJ2xlYWRlcnMnKTtcblxuICAgICAgICBjb25zdCBsZWFkZXJJbmZvID0gYXdhaXQgZGIuY29sbGVjdGlvbignbGVhZGVycycpLmZpbmRPbmUoe3VzZXJuYW1lOiB1c2VyTmFtZX0pO1xuICAgICAgICBhd2FpdCBkYi5jb2xsZWN0aW9uKCdsZWFkZXJzJykudXBkYXRlT25lKHt1c2VybmFtZTogdXNlck5hbWV9LHtcbiAgICAgICAgICAgICckc2V0Jzoge1xuICAgICAgICAgICAgICAgIHNjb3JlOiBuZXdTY29yZSxcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSlcbiAgICAgICAgY29uc3QgdXBkYXRlZExlYWRlckluZm8gPSBhd2FpdCBkYi5jb2xsZWN0aW9uKCdsZWFkZXJzJykuZmluZE9uZSh7dXNlcm5hbWU6IHVzZXJOYW1lfSk7XG5cbiAgICAgICAgLy9yZXMuc3RhdHVzKDIwMCkuanNvbih1cGRhdGVkTGVhZGVySW5mbyk7XG4gICAgICAgIHJlcy5zdGF0dXMoMjAwKS5zZW5kKGBTY29yZSBmb3IgJHt1c2VyTmFtZX0gaGFzIGJlZW4gdXBkYXRlZCB0byAke3VwZGF0ZWRMZWFkZXJJbmZvLnNjb3JlfWApO1xuXG4gICAgICAgIGNsaWVudC5jbG9zZSgpO1xuXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgcmVzLnN0YXR1cyg1MDApLmpzb24oe21lc3NhZ2U6ICdFcnJvciBjb25uZWN0aW5nIHRvIGRiJywgZXJyb3J9KTtcbiAgICB9XG59KTtcblxuYXBwLmxpc3RlbihQT1JULCAoKSA9PiBjb25zb2xlLmxvZyhcIkxpc3RlbmluZyBvbiBwb3J0IFwiLCBQT1JUKSk7Il19",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "app",
        "PORT",
        "use",
        "bodyParser",
        "json",
        "get",
        "req",
        "res",
        "MongoClient",
        "connect",
        "useNewUrlParser",
        "useUnifiedTopology",
        "client",
        "db",
        "sort",
        "score",
        "collection",
        "find",
        "toArray",
        "leadersList",
        "status",
        "close",
        "message",
        "error",
        "userName",
        "params",
        "username",
        "findOne",
        "leaderInfo",
        "post",
        "newScore",
        "newscore",
        "updateOne",
        "updatedLeaderInfo",
        "send",
        "listen",
        "console",
        "log"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/natnaelmekonnen/Documents/react-practice/Whack-A-Mole/backend/src/",
      "sourcesContent": [
        "import express from 'express';\nimport bodyParser from 'body-parser';\nimport {MongoClient} from 'mongodb';\n\nconst app = express();\nconst PORT = 8000;\n\napp.use(bodyParser.json());\n\napp.get('/api/leaders/', async (req, res) => {\n    try {\n        const client = await MongoClient.connect('mongodb://localhost:27017', {useNewUrlParser: true, useUnifiedTopology: true});\n        const db = client.db('leaders');\n\n        var sort = {score: -1};\n        const leadersList = await db.collection('leaders').find({}).sort(sort).toArray();\n\n        res.status(200).json(leadersList);\n\n        client.close();\n\n    } catch (error) {\n        res.status(500).json({message: 'Error connecting to db', error});\n    }\n})\n\napp.get('/api/leaders/:username', async (req, res) => {\n    try {\n        const userName = req.params.username;\n\n        const client = await MongoClient.connect('mongodb://localhost:27017', {useNewUrlParser: true, useUnifiedTopology: true});\n        const db = client.db('leaders');\n\n        const leaderInfo = await db.collection('leaders').findOne({username: userName});\n\n        res.status(200).json(leaderInfo);\n\n        client.close();\n    } catch (error) {\n        res.status(500).json({message: 'Error connecting to db', error});\n    }\n});\n\napp.post('/api/leaders/:username/:newscore', async (req, res) => {\n    try {\n        const userName = req.params.username;\n        const newScore = req.params.newscore;\n\n        const client = await MongoClient.connect('mongodb://localhost:27017', {useNewUrlParser: true, useUnifiedTopology: true});\n        const db = client.db('leaders');\n\n        const leaderInfo = await db.collection('leaders').findOne({username: userName});\n        await db.collection('leaders').updateOne({username: userName},{\n            '$set': {\n                score: newScore,\n            }\n        })\n        const updatedLeaderInfo = await db.collection('leaders').findOne({username: userName});\n\n        //res.status(200).json(updatedLeaderInfo);\n        res.status(200).send(`Score for ${userName} has been updated to ${updatedLeaderInfo.score}`);\n\n        client.close();\n\n    } catch (error) {\n        res.status(500).json({message: 'Error connecting to db', error});\n    }\n});\n\napp.listen(PORT, () => console.log(\"Listening on port \", PORT));"
      ]
    },
    "sourceType": "script",
    "mtime": 1589180090741
  }
}