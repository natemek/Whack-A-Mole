{"ast":null,"code":"/**\n * HashMap - HashMap Class for JavaScript\n * @author Ariel Flesler <aflesler@gmail.com>\n * @version 2.4.0\n * Homepage: https://github.com/flesler/hashmap\n */\n(function (factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define([], factory);\n  } else if (typeof module === 'object') {\n    // Node js environment\n    var HashMap = module.exports = factory(); // Keep it backwards compatible\n\n    HashMap.HashMap = HashMap;\n  } else {\n    // Browser globals (this is window)\n    this.HashMap = factory();\n  }\n})(function () {\n  function HashMap(other) {\n    this.clear();\n\n    switch (arguments.length) {\n      case 0:\n        break;\n\n      case 1:\n        {\n          if ('length' in other) {\n            // Flatten 2D array to alternating key-value array\n            multi(this, Array.prototype.concat.apply([], other));\n          } else {\n            // Assumed to be a HashMap instance\n            this.copy(other);\n          }\n\n          break;\n        }\n\n      default:\n        multi(this, arguments);\n        break;\n    }\n  }\n\n  var proto = HashMap.prototype = {\n    constructor: HashMap,\n    get: function (key) {\n      var data = this._data[this.hash(key)];\n\n      return data && data[1];\n    },\n    set: function (key, value) {\n      // Store original key as well (for iteration)\n      var hash = this.hash(key);\n\n      if (!(hash in this._data)) {\n        this.size++;\n      }\n\n      this._data[hash] = [key, value];\n    },\n    multi: function () {\n      multi(this, arguments);\n    },\n    copy: function (other) {\n      for (var hash in other._data) {\n        if (!(hash in this._data)) {\n          this.size++;\n        }\n\n        this._data[hash] = other._data[hash];\n      }\n    },\n    has: function (key) {\n      return this.hash(key) in this._data;\n    },\n    search: function (value) {\n      for (var key in this._data) {\n        if (this._data[key][1] === value) {\n          return this._data[key][0];\n        }\n      }\n\n      return null;\n    },\n    delete: function (key) {\n      var hash = this.hash(key);\n\n      if (hash in this._data) {\n        this.size--;\n        delete this._data[hash];\n      }\n    },\n    type: function (key) {\n      var str = Object.prototype.toString.call(key);\n      var type = str.slice(8, -1).toLowerCase(); // Some browsers yield DOMWindow or Window for null and undefined, works fine on Node\n\n      if (!key && (type === 'domwindow' || type === 'window')) {\n        return key + '';\n      }\n\n      return type;\n    },\n    keys: function () {\n      var keys = [];\n      this.forEach(function (_, key) {\n        keys.push(key);\n      });\n      return keys;\n    },\n    values: function () {\n      var values = [];\n      this.forEach(function (value) {\n        values.push(value);\n      });\n      return values;\n    },\n    entries: function () {\n      var entries = [];\n      this.forEach(function (value, key) {\n        entries.push([key, value]);\n      });\n      return entries;\n    },\n    // TODO: This is deprecated and will be deleted in a future version\n    count: function () {\n      return this.size;\n    },\n    clear: function () {\n      // TODO: Would Object.create(null) make any difference\n      this._data = {};\n      this.size = 0;\n    },\n    clone: function () {\n      return new HashMap(this);\n    },\n    hash: function (key) {\n      switch (this.type(key)) {\n        case 'undefined':\n        case 'null':\n        case 'boolean':\n        case 'number':\n        case 'regexp':\n          return key + '';\n\n        case 'date':\n          return '♣' + key.getTime();\n\n        case 'string':\n          return '♠' + key;\n\n        case 'array':\n          var hashes = [];\n\n          for (var i = 0; i < key.length; i++) {\n            hashes[i] = this.hash(key[i]);\n          }\n\n          return '♥' + hashes.join('⁞');\n\n        default:\n          // TODO: Don't use expandos when Object.defineProperty is not available?\n          if (!key.hasOwnProperty('_hmuid_')) {\n            key._hmuid_ = ++HashMap.uid;\n            hide(key, '_hmuid_');\n          }\n\n          return '♦' + key._hmuid_;\n      }\n    },\n    forEach: function (func, ctx) {\n      for (var key in this._data) {\n        var data = this._data[key];\n        func.call(ctx || this, data[1], data[0]);\n      }\n    }\n  };\n  HashMap.uid = 0; // Iterator protocol for ES6\n\n  if (typeof Symbol !== 'undefined' && typeof Symbol.iterator !== 'undefined') {\n    proto[Symbol.iterator] = function () {\n      var entries = this.entries();\n      var i = 0;\n      return {\n        next: function () {\n          if (i === entries.length) {\n            return {\n              done: true\n            };\n          }\n\n          var currentEntry = entries[i++];\n          return {\n            value: {\n              key: currentEntry[0],\n              value: currentEntry[1]\n            },\n            done: false\n          };\n        }\n      };\n    };\n  } //- Add chaining to all methods that don't return something\n\n\n  ['set', 'multi', 'copy', 'delete', 'clear', 'forEach'].forEach(function (method) {\n    var fn = proto[method];\n\n    proto[method] = function () {\n      fn.apply(this, arguments);\n      return this;\n    };\n  }); //- Backwards compatibility\n  // TODO: remove() is deprecated and will be deleted in a future version\n\n  HashMap.prototype.remove = HashMap.prototype.delete; //- Utils\n\n  function multi(map, args) {\n    for (var i = 0; i < args.length; i += 2) {\n      map.set(args[i], args[i + 1]);\n    }\n  }\n\n  function hide(obj, prop) {\n    // Make non iterable if supported\n    if (Object.defineProperty) {\n      Object.defineProperty(obj, prop, {\n        enumerable: false\n      });\n    }\n  }\n\n  return HashMap;\n});","map":{"version":3,"sources":["/Users/natnaelmekonnen/Documents/react-practice/wackamole/node_modules/hashmap/hashmap.js"],"names":["factory","define","amd","module","HashMap","exports","other","clear","arguments","length","multi","Array","prototype","concat","apply","copy","proto","constructor","get","key","data","_data","hash","set","value","size","has","search","delete","type","str","Object","toString","call","slice","toLowerCase","keys","forEach","_","push","values","entries","count","clone","getTime","hashes","i","join","hasOwnProperty","_hmuid_","uid","hide","func","ctx","Symbol","iterator","next","done","currentEntry","method","fn","remove","map","args","obj","prop","defineProperty","enumerable"],"mappings":"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","sourcesContent":["/**\n * HashMap - HashMap Class for JavaScript\n * @author Ariel Flesler <aflesler@gmail.com>\n * @version 2.4.0\n * Homepage: https://github.com/flesler/hashmap\n */\n\n(function(factory) {\n\tif (typeof define === 'function' && define.amd) {\n\t\t// AMD. Register as an anonymous module.\n\t\tdefine([], factory);\n\t} else if (typeof module === 'object') {\n\t\t// Node js environment\n\t\tvar HashMap = module.exports = factory();\n\t\t// Keep it backwards compatible\n\t\tHashMap.HashMap = HashMap;\n\t} else {\n\t\t// Browser globals (this is window)\n\t\tthis.HashMap = factory();\n\t}\n}(function() {\n\n\tfunction HashMap(other) {\n\t\tthis.clear();\n\t\tswitch (arguments.length) {\n\t\t\tcase 0: break;\n\t\t\tcase 1: {\n\t\t\t\tif ('length' in other) {\n\t\t\t\t\t// Flatten 2D array to alternating key-value array\n\t\t\t\t\tmulti(this, Array.prototype.concat.apply([], other));\n\t\t\t\t} else { // Assumed to be a HashMap instance\n\t\t\t\t\tthis.copy(other);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdefault: multi(this, arguments); break;\n\t\t}\n\t}\n\n\tvar proto = HashMap.prototype = {\n\t\tconstructor:HashMap,\n\n\t\tget:function(key) {\n\t\t\tvar data = this._data[this.hash(key)];\n\t\t\treturn data && data[1];\n\t\t},\n\n\t\tset:function(key, value) {\n\t\t\t// Store original key as well (for iteration)\n\t\t\tvar hash = this.hash(key);\n\t\t\tif ( !(hash in this._data) ) {\n\t\t\t\tthis.size++;\n\t\t\t}\n\t\t\tthis._data[hash] = [key, value];\n\t\t},\n\n\t\tmulti:function() {\n\t\t\tmulti(this, arguments);\n\t\t},\n\n\t\tcopy:function(other) {\n\t\t\tfor (var hash in other._data) {\n\t\t\t\tif ( !(hash in this._data) ) {\n\t\t\t\t\tthis.size++;\n\t\t\t\t}\n\t\t\t\tthis._data[hash] = other._data[hash];\n\t\t\t}\n\t\t},\n\n\t\thas:function(key) {\n\t\t\treturn this.hash(key) in this._data;\n\t\t},\n\n\t\tsearch:function(value) {\n\t\t\tfor (var key in this._data) {\n\t\t\t\tif (this._data[key][1] === value) {\n\t\t\t\t\treturn this._data[key][0];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn null;\n\t\t},\n\n\t\tdelete:function(key) {\n\t\t\tvar hash = this.hash(key);\n\t\t\tif ( hash in this._data ) {\n\t\t\t\tthis.size--;\n\t\t\t\tdelete this._data[hash];\n\t\t\t}\n\t\t},\n\n\t\ttype:function(key) {\n\t\t\tvar str = Object.prototype.toString.call(key);\n\t\t\tvar type = str.slice(8, -1).toLowerCase();\n\t\t\t// Some browsers yield DOMWindow or Window for null and undefined, works fine on Node\n\t\t\tif (!key && (type === 'domwindow' || type === 'window')) {\n\t\t\t\treturn key + '';\n\t\t\t}\n\t\t\treturn type;\n\t\t},\n\n\t\tkeys:function() {\n\t\t\tvar keys = [];\n\t\t\tthis.forEach(function(_, key) { keys.push(key); });\n\t\t\treturn keys;\n\t\t},\n\n\t\tvalues:function() {\n\t\t\tvar values = [];\n\t\t\tthis.forEach(function(value) { values.push(value); });\n\t\t\treturn values;\n\t\t},\n\n\t\tentries:function() {\n\t\t\tvar entries = [];\n\t\t\tthis.forEach(function(value, key) { entries.push([key, value]); });\n\t\t\treturn entries;\n\t\t},\n\n\t\t// TODO: This is deprecated and will be deleted in a future version\n\t\tcount:function() {\n\t\t\treturn this.size;\n\t\t},\n\n\t\tclear:function() {\n\t\t\t// TODO: Would Object.create(null) make any difference\n\t\t\tthis._data = {};\n\t\t\tthis.size = 0;\n\t\t},\n\n\t\tclone:function() {\n\t\t\treturn new HashMap(this);\n\t\t},\n\n\t\thash:function(key) {\n\t\t\tswitch (this.type(key)) {\n\t\t\t\tcase 'undefined':\n\t\t\t\tcase 'null':\n\t\t\t\tcase 'boolean':\n\t\t\t\tcase 'number':\n\t\t\t\tcase 'regexp':\n\t\t\t\t\treturn key + '';\n\n\t\t\t\tcase 'date':\n\t\t\t\t\treturn '♣' + key.getTime();\n\n\t\t\t\tcase 'string':\n\t\t\t\t\treturn '♠' + key;\n\n\t\t\t\tcase 'array':\n\t\t\t\t\tvar hashes = [];\n\t\t\t\t\tfor (var i = 0; i < key.length; i++) {\n\t\t\t\t\t\thashes[i] = this.hash(key[i]);\n\t\t\t\t\t}\n\t\t\t\t\treturn '♥' + hashes.join('⁞');\n\n\t\t\t\tdefault:\n\t\t\t\t\t// TODO: Don't use expandos when Object.defineProperty is not available?\n\t\t\t\t\tif (!key.hasOwnProperty('_hmuid_')) {\n\t\t\t\t\t\tkey._hmuid_ = ++HashMap.uid;\n\t\t\t\t\t\thide(key, '_hmuid_');\n\t\t\t\t\t}\n\n\t\t\t\t\treturn '♦' + key._hmuid_;\n\t\t\t}\n\t\t},\n\n\t\tforEach:function(func, ctx) {\n\t\t\tfor (var key in this._data) {\n\t\t\t\tvar data = this._data[key];\n\t\t\t\tfunc.call(ctx || this, data[1], data[0]);\n\t\t\t}\n\t\t}\n\t};\n\n\tHashMap.uid = 0;\n\n\t// Iterator protocol for ES6\n\tif (typeof Symbol !== 'undefined' && typeof Symbol.iterator !== 'undefined') {\n\t\tproto[Symbol.iterator] = function() {\n\t\t\tvar entries = this.entries();\n\t\t\tvar i = 0;\n\t\t\treturn {\n\t\t\t\tnext:function() {\n\t\t\t\t\tif (i === entries.length) { return { done: true }; }\n\t\t\t\t\tvar currentEntry = entries[i++];\n\t\t\t\t\treturn {\n\t\t\t\t\t\tvalue: { key: currentEntry[0], value: currentEntry[1] },\n\t\t\t\t\t\tdone: false\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t};\n\t\t};\n\t}\n\n\t//- Add chaining to all methods that don't return something\n\n\t['set','multi','copy','delete','clear','forEach'].forEach(function(method) {\n\t\tvar fn = proto[method];\n\t\tproto[method] = function() {\n\t\t\tfn.apply(this, arguments);\n\t\t\treturn this;\n\t\t};\n\t});\n\n\t//- Backwards compatibility\n\n\t// TODO: remove() is deprecated and will be deleted in a future version\n\tHashMap.prototype.remove = HashMap.prototype.delete;\n\n\t//- Utils\n\n\tfunction multi(map, args) {\n\t\tfor (var i = 0; i < args.length; i += 2) {\n\t\t\tmap.set(args[i], args[i+1]);\n\t\t}\n\t}\n\n\tfunction hide(obj, prop) {\n\t\t// Make non iterable if supported\n\t\tif (Object.defineProperty) {\n\t\t\tObject.defineProperty(obj, prop, {enumerable:false});\n\t\t}\n\t}\n\n\treturn HashMap;\n}));\n"]},"metadata":{},"sourceType":"script"}