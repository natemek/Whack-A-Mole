{"ast":null,"code":"var _jsxFileName = \"/Users/natnaelmekonnen/Documents/react-practice/wackamole/src/App.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport HashMap from 'hashmap';\nimport logo from \"./logo.svg\";\nimport './style.css';\nimport mole from './mole.jpg';\n/**\n * Represents square component\n * @param {*} props \n */\n\nclass Square extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: props.id,\n      className: props.className\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"button\", {\n      className: this.props.className,\n      id: this.state.id,\n      onClick: () => this.props.onClick(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 7\n      }\n    });\n  }\n\n}\n\nclass Board extends React.Component {\n  renderSquare(i) {\n    return /*#__PURE__*/React.createElement(Square, {\n      id: i,\n      className: this.props.squares[i],\n      onClick: () => this.props.handleClick(i, this.props.squares[i]),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"grid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }\n    }, this.renderSquare(0), this.renderSquare(1), this.renderSquare(2), this.renderSquare(3), this.renderSquare(4), this.renderSquare(5), this.renderSquare(6), this.renderSquare(7), this.renderSquare(8));\n  }\n\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      squares: Array(9).fill(\"square\")\n    };\n  }\n\n  randomSquare() {\n    const sqs = Array(9).fill(\"square\");\n    let randomPosition = Math.floor(Math.random() * 8);\n    console.log(\"Rand position = \" + randomPosition);\n    sqs[randomPosition] = \"mole\";\n    this.setState({\n      squares: sqs\n    });\n  }\n\n  handleClick(i, c) {\n    const sqs = this.state.squares.slice();\n\n    if (c === \"square\") {\n      sqs[i] = \"mole\";\n    } else {\n      sqs[i] = \"square\";\n    }\n\n    console.log(c + \" at index \" + i);\n    console.log(sqs[i]);\n    this.setState({\n      squares: sqs\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"square\",\n      onClick: () => this.randomSquare(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }\n    }, \"HI\"), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }\n    }, \"Whack-A-Mole\"), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }\n    }, \"Score:\"), /*#__PURE__*/React.createElement(\"h4\", {\n      id: \"score\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }\n    }, \"0\"), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }\n    }, \"Seconds left:\"), /*#__PURE__*/React.createElement(\"h4\", {\n      id: \"time-left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }\n    }, \"60\"), /*#__PURE__*/React.createElement(Board, {\n      squares: this.state.squares,\n      handleClick: (i, c) => this.handleClick(i, c),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/React.createElement(Game, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 17\n  }\n}), document.getElementById(\"root\"));\nexport default Game;","map":{"version":3,"sources":["/Users/natnaelmekonnen/Documents/react-practice/wackamole/src/App.js"],"names":["React","ReactDOM","HashMap","mole","Square","Component","constructor","props","state","id","className","render","onClick","Board","renderSquare","i","squares","handleClick","Game","Array","fill","randomSquare","sqs","randomPosition","Math","floor","random","console","log","setState","c","slice","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport HashMap from 'hashmap';\nimport logo from './logo.svg';\nimport './style.css';\nimport mole from './mole.jpg'\n\n/**\n * Represents square component\n * @param {*} props \n */\nclass Square extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: props.id,\n      className: props.className\n    }\n  }\n\n  render () {\n    return (\n      <button className={this.props.className} \n        id={this.state.id} \n        onClick={() => this.props.onClick()}>\n      </button>\n    );\n  }\n}\n\nclass Board extends React.Component {\n\n  renderSquare(i) {\n    return (\n      <Square\n        id={i}\n        className={this.props.squares[i]}\n        onClick={() => this.props.handleClick(i, this.props.squares[i])}\n      />\n    );\n  }\n\n  render () {\n    return (\n      <div className=\"grid\">\n        {this.renderSquare(0)}\n        {this.renderSquare(1)}\n        {this.renderSquare(2)}\n\n        {this.renderSquare(3)}\n        {this.renderSquare(4)}\n        {this.renderSquare(5)}\n\n        {this.renderSquare(6)}\n        {this.renderSquare(7)}\n        {this.renderSquare(8)}\n      </div>\n    );\n  }\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      squares: Array(9).fill(\"square\"),\n    };\n  }\n\n  randomSquare()  {\n    const sqs = Array(9).fill(\"square\");\n    let randomPosition = Math.floor(Math.random() * 8)\n    console.log(\"Rand position = \" + randomPosition)\n    sqs[randomPosition] = \"mole\"\n    this.setState({squares: sqs});\n  }\n\n  handleClick(i, c) {\n    const sqs = this.state.squares.slice();\n    if (c === \"square\") {\n      sqs[i] = \"mole\"\n    } else {\n      sqs[i] = \"square\"\n    }\n    console.log(c + \" at index \" + i)\n    console.log(sqs[i])\n    this.setState({squares: sqs});\n  }\n\n  render () {\n    return (\n      <div>\n        <button className=\"square\" onClick={() => this.randomSquare()}>HI</button>\n        <h1>Whack-A-Mole</h1>\n\n        <h4>Score:</h4>\n        <h4 id=\"score\">0</h4>\n\n        <h4>Seconds left:</h4>\n        <h4 id=\"time-left\">60</h4>\n        \n        <Board squares= {this.state.squares} handleClick= {(i,c) => this.handleClick(i,c)}/>\n        \n      </div>\n    );\n  }\n}\n\nReactDOM.render(<Game />, document.getElementById(\"root\"));\n\nexport default Game;\n"]},"metadata":{},"sourceType":"module"}