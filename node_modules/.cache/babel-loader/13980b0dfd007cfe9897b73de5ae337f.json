{"ast":null,"code":"var _jsxFileName = \"/Users/natnaelmekonnen/Documents/react-practice/wackamole/src/App.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport HashMap from 'hashmap';\nimport './style.css';\nimport mole from './mole.jpg';\n/**\n * Represents square component\n * @param {*} props \n */\n\nclass Square extends React.Component {\n  render() {\n    return /*#__PURE__*/React.createElement(\"button\", {\n      className: this.props.className,\n      id: this.props.id,\n      onClick: () => this.props.onClick(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 7\n      }\n    });\n  }\n\n}\n\nclass Board extends React.Component {\n  //onClick={() => this.props.handleClick(i, this.props.squares[i])}\n  renderSquare(i) {\n    return /*#__PURE__*/React.createElement(Square, {\n      id: i,\n      className: this.props.squares[i],\n      onClick: () => this.props.scoreCounter(i),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"grid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }\n    }, this.renderSquare(0), this.renderSquare(1), this.renderSquare(2), this.renderSquare(3), this.renderSquare(4), this.renderSquare(5), this.renderSquare(6), this.renderSquare(7), this.renderSquare(8));\n  }\n\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.hitPosition = -1;\n    this.timer = setInterval(() => this.setState({\n      timeLeft: this.state.timeLeft\n    }), 100);\n    this.interval = setInterval(this.countDown(), 1000);\n    this.state = {\n      squares: Array(9).fill(\"square\"),\n      score: 0,\n      timeLeft: 60\n    };\n  }\n\n  randomSquare() {\n    const sqs = Array(9).fill(\"square\");\n    let randomPosition = Math.floor(Math.random() * 8);\n    console.log(\"Rand position = \" + randomPosition);\n    sqs[randomPosition] = \"mole\";\n    this.hitPosition = randomPosition;\n    this.setState({\n      squares: sqs\n    });\n  }\n\n  handleClick(i, c) {\n    const sqs = this.state.squares.slice();\n\n    if (c === \"square\") {\n      sqs[i] = \"mole\";\n    } else {\n      sqs[i] = \"square\";\n    }\n\n    console.log(c + \" at index \" + i);\n    console.log(sqs[i]);\n    this.setState({\n      squares: sqs\n    });\n  }\n\n  scoreCounter(i) {\n    if (i === this.hitPosition) {\n      this.setState({\n        score: this.state.score + 1\n      });\n    }\n  }\n\n  countDown() {\n    this.setState({\n      timeLeft: this.state.timeLeft - 1\n    });\n\n    if (this.state.timeLeft === 0) {\n      clearInterval(this.interval);\n      alert('GAME OVER! Your final score is ' + this.state.score);\n    }\n  } //<Board squares= {this.state.squares} handleClick= {(i,c) => this.handleClick(i,c)}/>\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.randomSquare(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }\n    }, this.hitPosition), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }\n    }, \"Whack-A-Mole\"), /*#__PURE__*/React.createElement(\"h4\", {\n      id: \"score\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }\n    }, \"Score: \", this.state.score), /*#__PURE__*/React.createElement(\"h4\", {\n      id: \"time-left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }\n    }, \"Seconds left: \", this.state.timeLeft), /*#__PURE__*/React.createElement(Board, {\n      squares: this.state.squares,\n      scoreCounter: i => this.scoreCounter(i),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/React.createElement(Game, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 17\n  }\n}), document.getElementById(\"root\"));\nexport default Game;","map":{"version":3,"sources":["/Users/natnaelmekonnen/Documents/react-practice/wackamole/src/App.js"],"names":["React","ReactDOM","HashMap","mole","Square","Component","render","props","className","id","onClick","Board","renderSquare","i","squares","scoreCounter","Game","constructor","hitPosition","timer","setInterval","setState","timeLeft","state","interval","countDown","Array","fill","score","randomSquare","sqs","randomPosition","Math","floor","random","console","log","handleClick","c","slice","clearInterval","alert","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport HashMap from 'hashmap';\nimport './style.css';\nimport mole from './mole.jpg'\n\n/**\n * Represents square component\n * @param {*} props \n */\nclass Square extends React.Component {\n\n  render () {\n    return (\n      <button className={this.props.className} \n        id={this.props.id} \n        onClick={() => this.props.onClick()}>\n      </button>\n    );\n  }\n}\n\nclass Board extends React.Component {\n\n  //onClick={() => this.props.handleClick(i, this.props.squares[i])}\n  renderSquare(i) {\n    return (\n      <Square\n        id={i}\n        className={this.props.squares[i]}\n        onClick={() => this.props.scoreCounter(i)}\n      />\n    );\n  }\n\n  render () {\n    return (\n      <div className=\"grid\">\n        {this.renderSquare(0)}\n        {this.renderSquare(1)}\n        {this.renderSquare(2)}\n\n        {this.renderSquare(3)}\n        {this.renderSquare(4)}\n        {this.renderSquare(5)}\n\n        {this.renderSquare(6)}\n        {this.renderSquare(7)}\n        {this.renderSquare(8)}\n      </div>\n    );\n  }\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      squares: Array(9).fill(\"square\"),\n      score: 0,\n      timeLeft: 60,\n    };\n  }\n\n  hitPosition = -1;\n\n  randomSquare()  {\n    const sqs = Array(9).fill(\"square\");\n    let randomPosition = Math.floor(Math.random() * 8)\n    console.log(\"Rand position = \" + randomPosition)\n    sqs[randomPosition] = \"mole\"\n    this.hitPosition = randomPosition\n    this.setState({squares: sqs});\n  }\n\n  handleClick(i, c) {\n    const sqs = this.state.squares.slice();\n    if (c === \"square\") {\n      sqs[i] = \"mole\"\n    } else {\n      sqs[i] = \"square\"\n    }\n    console.log(c + \" at index \" + i)\n    console.log(sqs[i])\n    this.setState({squares: sqs});\n  }\n\n  scoreCounter(i) {\n    \n    if (i === this.hitPosition) {\n      this.setState({score: this.state.score + 1})\n    }\n  }\n\n  timer = setInterval(() => this.setState({\n    timeLeft: this.state.timeLeft\n  }), 100)\n\n  interval = setInterval(this.countDown(), 1000)\n  countDown() {\n    this.setState({timeLeft: this.state.timeLeft - 1})\n    \n    if(this.state.timeLeft === 0) {\n        clearInterval(this.interval)\n        alert('GAME OVER! Your final score is ' + this.state.score)\n    }\n  }\n\n  //<Board squares= {this.state.squares} handleClick= {(i,c) => this.handleClick(i,c)}/>\n  render () {\n    return (\n      <div className=\"center\">\n        <button onClick={() => this.randomSquare()}>{this.hitPosition}</button>\n        <h1>Whack-A-Mole</h1>\n\n        <h4 id=\"score\">Score: {this.state.score}</h4>\n\n        <h4 id=\"time-left\">Seconds left: {this.state.timeLeft}</h4>\n        \n        <Board squares= {this.state.squares} scoreCounter= {(i) => this.scoreCounter(i)}/>\n        \n      </div>\n    );\n  }\n}\n\nReactDOM.render(<Game />, document.getElementById(\"root\"));\n\nexport default Game;\n"]},"metadata":{},"sourceType":"module"}